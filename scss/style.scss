$large: 800px;
$input-height: 40px;
$colour: slateblue;
$font: sans-serif;

.container {
	margin: 0 auto;
	min-width: 200px;
	font-family: $font;
	background: wheat;

	.wrapper__header {
		max-width: fit-content;
		margin: 0 auto;

		h3 {
			font-size: 1.35rem;
			text-decoration: underline;
			text-underline-offset: 0.15rem;
			text-decoration-thickness: 0.15rem;
		}
	}
}

form.container__form {
	max-width: MIN(1000px, 45vw);
	min-width: fit-content;
	margin: 2rem auto;

	fieldset.wrapper__form.basic-contact-details {
		display: grid;
		grid-template-rows: repeat(auto-fit, minmax(80px, 1fr));
		grid-auto-rows: 1fr;
		grid-template-columns: minmax(auto, 1fr);
		place-items: center;
		padding: 1rem;
		margin: 0 auto;
		border-radius: 3px;
		border: 1px solid rgba($colour, 25%);

		@media only screen and (min-width: $large) {
			grid-template-rows: repeat(auto-fit, minmax(66px, 1fr));
		}

		legend {
			margin: auto 30px auto auto;
			padding: 0 10px;
			font-family: monospace;
			color: $colour;
		}

		.grid-row {
			width: 95%;

			label {
				text-transform: uppercase;
				height: $input-height;

				@media only screen and (min-width: $large) {
					display: flex;
					flex-direction: row;
					justify-content: space-between;
					align-items: center;
				}

				input {
					display: block;
					width: 0%;
					margin-top: 0.1rem;
					align-self: flex-end;
					height: inherit;
					-moz-appearance: textfield;

					&::-webkit-outer-spin-button,
					&::-webkit-inner-spin-button {
						-webkit-appearance: none;
						margin: 0;
					}

					@media only screen and (min-width: $large) {
						// max-width: MIN(700px, 78%);
						// max-width: MIN(700px, calc(100% - calc(94px + 1rem)));
						align-self: stretch;
					}
				}
			}
		}

		.grid-row__button {
			display: flex;
			flex-direction: row;
			justify-content: center;

			input[type="submit"] {
				all: unset;
				padding: 0.55rem 1.7rem;
				color: white;
				background-color: $colour;
				cursor: pointer;
				max-width: fit-content;
				text-align: center;
				justify-content: center;

				&:hover {
					background-color: red;
				}

				@media only screen and (min-width: $large) {
					padding: 0.55rem 5vw;
				}
			}
		}
	}
}


/*
Nice to have, but not essential. These styles are purely for a 
*/
.grid-row {
	label {
		display: flex;
		flex-direction: column;
		justify-content: center;

		@media only screen and (min-width: $large) {
			position: relative;
		}

		span {
			z-index: 9;
			position: absolute;

			transition: font-size 0.5s ease-out 0.3s,
				transform 0.4s cubic-bezier(0.1, -0.32, 0.2, 0);

			@media only screen and (min-width: $large) {
				position: relative;
			}
		}

		input {
			background: rgba($colour, 5%);
			color: white;
			border: none;
			background: linear-gradient(to left, rgba($colour, 5%) 50%, transparent 50%) right;
			background-size: 200%;
			text-indent: 3px;
			font-size: 1.2rem;
			transition: color 0.1s ease-in, background-position 0.5s ease-in, text-indent .2s ease-in;

			&:focus {
				color: $colour;
				background-position: left;
				transition: background-position 0.4s ease-in, color 0.1s ease-in;

				@media only screen and (min-width: $large) {
					text-indent: unset;
					transition: text-indent .2s ease-in;
				}
			}

			&::selection {
				background-color: $colour;
				color: white;
				font-weight: 500;
			}
		}

		&::after {
			content: "";
			display: block;
			width: 0;
			height: 1px;
			background: $colour;
			transition: width 0.5s ease-in;

			@media only screen and (min-width: $large) {
				position: absolute;
				bottom: 0;
				right: 0;
			}
		}

		&:focus-within::after {
			width: 100%;
			transition: width 0.4s ease-in;

			@media only screen and (min-width: $large) {
				// width: 79%;
				right: 5px;
			}
		}
	}

	&:focus-within {
		span {
			z-index: 0;
			font-size: 0.75rem;
			transform: translateY(-125%);
			transition: transform 0.5s cubic-bezier(0.1, -0.6, 0.2, 0),
				font-size 0.5s ease-out 0.3s, width 0.5;

			@media only screen and (min-width: $large) {
				transition: font-size 0.5s ease-out 0.3s;
				transform: unset;
			}
		}

		input {
			background-color: transparent;
			left: -5px;
			position: relative;
			opacity: 1;
			outline: none;
			border: none;

			@media only screen and (min-width: $large) {
				align-self: flex-end;
			}
		}
	}
}